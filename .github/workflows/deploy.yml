name: Deploy - Production - Velloware-Dash-backend.velloware.com

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          PORT: ${{ secrets.PORT }}
          source: '.'
          target: '/var/www/dashboard.velloware.com/Velloware-dash/'
          overwrite: true
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          PORT: ${{ secrets.PORT }}
          script: ls

      - name: Deployng the project branch ${{ github.ref_name }} in /var/www/dashboard.velloware.com/Velloware-dash/
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          PORT: ${{ secrets.PORT }}
          script: |
            sudo chown -R $USER /var/www/dashboard.velloware.com/Velloware-dash/
            cd /var/www/dashboard.velloware.com/Velloware-dash/
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            npm ci i
            npm run build
            pm2 link ${{ secrets.PM2A }} ${{ secrets.PM2B }}
            pm2 delete Velloware Dash Server
            pm2 start ecosystem.config.js
            curl --request POST --url https://dash.velloware.com/api/notification --header 'Content-Type: application/json' --data '{"message": "\nDeploing Velloware Backend - â›‘${{ github.ref_name }}ðŸ“£ðŸ“¢\n on Vello-1-server (acess: dash.velloware.com)"}'
